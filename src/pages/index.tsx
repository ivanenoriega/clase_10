import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { Typography } from '@mui/material'
import { SubmitHandler, useForm, FieldValues } from 'react-hook-form'
import { isString } from 'util'
import { useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const {
    register,
    handleSubmit,
    formState: { errors }
  } = useForm()
  const [showSuccessMessage, setShowSuccessMessage] = useState(false)
  const onSubmit: SubmitHandler<FieldValues> = (data) => {
    setShowSuccessMessage(true)
  }
  const showNameRequired = errors.name && errors.name?.type === 'required'

  return (
    <>
      <Head>
        <title>Clase 10 - MUI</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Typography variant="h1" component="h1" className={inter.className}>
          Clase 12: React Hook Form
        </Typography>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div>
            <label>
              Nombre:
              <input {...register('name', { required: "Nombre es obligatorio", maxLength: 255, minLength: 3 })} />
              {showNameRequired && <span>{isString(errors.name?.message) ? errors.name?.message : 'Error'}</span>}
              {errors.name && errors.name?.type === 'minLength' && <span>El nombre debe tener al menos 3 caracteres</span>}
              {errors.name && errors.name?.type === 'maxLength' && <span>El nombre debe tener menos de 255 caracteres</span>}
            </label>
          </div>
          <div>
            <label>
              Edad:
              <input {...register('age', { required: true, min: 18, max: 999 })} />
              {errors.age && errors.age?.type === 'required' && <span>Edad es obligatorio</span>}
              {errors.age && errors.age?.type === 'min' && <span>La edad debe ser mayor a 18</span>}
              {errors.age && errors.age?.type === 'max' && <span>La edad debe ser menor a 999</span>}
            </label>
          </div>
          <input type="submit" />
        </form>
        {showSuccessMessage && <span>Formulario enviado correctamente</span>}
      </main>
    </>
  )
}
