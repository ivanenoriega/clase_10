import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { Button, Input, Stack, TextField, Typography } from '@mui/material'
import Link from 'next/link'
import { useForm, Controller } from "react-hook-form"

type FormValues = {
  name: string
  last_name: string
}

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const { handleSubmit, control } = useForm<FormValues>()

  return (
    <>
      <Head>
        <title>Clase 13</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Stack spacing={2} direction={'row'}>
          <Link href="/controller">
            <Button variant="contained" size="small" >
              Controller
            </Button>
          </Link>
          <Link href="/use-controller">
            <Button variant="outlined" size="small" >
              useController
            </Button>
          </Link>
          <Link href="/schema">
            <Button variant="outlined" size="small" >
              Schema
            </Button>
          </Link>
        </Stack>
        <Typography variant="h1" component="h1" sx={{ fontSize: 36 }} className={inter.className}>
          Clase 13: React Hook Form + Material UI (Controller component)
        </Typography>

        <form onSubmit={handleSubmit((data) => console.log(data))}>
          <Stack gap={2} direction={'column'} paddingTop={10}>
            <Controller
              control={control}
              name="name"
              render={({ field: { onChange, onBlur, value, ref } }) => (
                <TextField variant="outlined" onChange={onChange} onBlur={onBlur} value={value} ref={ref} />
              )}
            />
            <Controller
              control={control}
              name="last_name"
              render={({ field }) => {
                console.log(field)
                return (
                  <TextField variant="outlined" onChange={field.onChange} onBlur={field.onBlur} value={field.value} ref={field.ref} />
                )
              }}
            />
            <input type="submit" />
          </Stack>
        </form>
      </main >
    </>
  )
}
